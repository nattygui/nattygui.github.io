<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>itertor and generator on nattygui的学习记录</title>
    <link>http://localhost:1313/tags/itertor-and-generator/</link>
    <description>Recent content in itertor and generator on nattygui的学习记录</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 08 Oct 2019 19:34:35 +0800</lastBuildDate>
    
        <atom:link href="http://localhost:1313/tags/itertor-and-generator/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>centos7 中常用的查询命令</title>
      <link>http://localhost:1313/2020/09/querycommand/</link>
      <pubDate>Fri, 04 Sep 2020 09:27:54 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/09/querycommand/</guid>
      <description>centos7 中常用的查询命令 ps 显示当前进程信息 ps -A 显示所有的进程信息 PID TTY TIME CMD 1 ? 00:00:08 systemd 2 ? 00:00:00 kthreadd 4 ? 00:00:00 kworker/0:0H 6 ? 00:00:00 ksoftirqd/0 7 ? 00:00:00 migration/0 8 ? 00:00:00 rcu_bh 9 ? 00:00:25 rcu_sched 10 ? 00:00:00 lru-add-drain 11 ? 00:00:00 watchdog/0 12</description>
    </item>
    
    <item>
      <title>Centos7 安装redis</title>
      <link>http://localhost:1313/2020/09/installredis/</link>
      <pubDate>Fri, 04 Sep 2020 09:27:54 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/09/installredis/</guid>
      <description>Centos7 安装redis 1、 检查是否有redis yum 源 若没有执行下一步，若有执行第三步 yum search redis yum info redis 2、安装 epel 仓库 yum install -y epel-release 3、 安装redis 数据库 yum info redis</description>
    </item>
    
    <item>
      <title>Privoxy</title>
      <link>http://localhost:1313/2020/09/privoxy/</link>
      <pubDate>Fri, 04 Sep 2020 09:27:54 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/09/privoxy/</guid>
      <description>Centos7 下traojan配置privoxy 下载trojan 首先去github下载 linux版本 https://github.com/trojan-gfw/trojan/releases/tag/v1.16.0 wget https://github.com/trojan-gfw/trojan/releases/download/v1.16.0/trojan-1.16.0-linux-amd64.tar.xz tar xvf trojan-1.16.0-linux-amd64.tar.xz 将配置写在config.json下 cd trojan //</description>
    </item>
    
    <item>
      <title>beego安装与配置</title>
      <link>http://localhost:1313/2020/06/beegoinit/</link>
      <pubDate>Mon, 22 Jun 2020 07:49:38 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/06/beegoinit/</guid>
      <description></description>
    </item>
    
    <item>
      <title>golang实现不分配额外内存[]byte和string转换</title>
      <link>http://localhost:1313/2020/06/strbytesconv/</link>
      <pubDate>Mon, 22 Jun 2020 07:49:38 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/06/strbytesconv/</guid>
      <description>golang实现不分配额外内存[]byte和string转换 普通的强转 一般在进行[]byte 和string之间进行转换时，通过进行强转实现。</description>
    </item>
    
    <item>
      <title>Goroutines和Channels</title>
      <link>http://localhost:1313/2020/06/goroutines_and_channels/</link>
      <pubDate>Mon, 22 Jun 2020 07:49:38 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/06/goroutines_and_channels/</guid>
      <description>Goroutines和Channels 并发程序指同时进行多个任务的程序，随着硬件的发展，并发程序变得越来越重要。web服务器会一次处理成千上</description>
    </item>
    
    <item>
      <title>map 介绍</title>
      <link>http://localhost:1313/2020/06/map/</link>
      <pubDate>Mon, 22 Jun 2020 07:49:38 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/06/map/</guid>
      <description>golang 数据结构之map 介绍 map是hash table数据结构，它支持快速的查找、增加和删除。 定义和声明 map[keyType]ValueType 其中 keyType 必须是可比较的数据类型 (golan</description>
    </item>
    
    <item>
      <title>Docker Overviews</title>
      <link>http://localhost:1313/2020/03/test/</link>
      <pubDate>Wed, 04 Mar 2020 19:51:20 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/03/test/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Docker Overviews</title>
      <link>http://localhost:1313/2020/03/docker-overviews/</link>
      <pubDate>Wed, 04 Mar 2020 19:51:20 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/03/docker-overviews/</guid>
      <description>Docker-overview </description>
    </item>
    
    <item>
      <title>RBM</title>
      <link>http://localhost:1313/2020/02/rbm/</link>
      <pubDate>Thu, 13 Feb 2020 13:52:21 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/02/rbm/</guid>
      <description>受限波尔兹曼机(Restricted Boltzmann Machine, RBM) 受限波尔兹曼机(Restricted Boltzmann Machine, RBM)是一种可用随机神经网络来解释的概率图模型。它由Sm</description>
    </item>
    
    <item>
      <title>Argparse</title>
      <link>http://localhost:1313/2019/12/argparse/</link>
      <pubDate>Tue, 10 Dec 2019 20:32:43 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/12/argparse/</guid>
      <description>argparse 使用该库在终端操作中，可以在命令行中增加参数。 argparse的使用 import argparse # 创建一个parser parser = argparse.ArgumentPar</description>
    </item>
    
    <item>
      <title>Pytorch_mean</title>
      <link>http://localhost:1313/2019/11/pytorch_mean/</link>
      <pubDate>Tue, 26 Nov 2019 16:37:00 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/11/pytorch_mean/</guid>
      <description>mean方法 最近在学《动手学习深度学习》中批量归一化中对4维矩阵求归一化用到了mean方法，但是其中用到的参数dim让我看着一脸懵逼，经过一</description>
    </item>
    
    <item>
      <title>Asyncio</title>
      <link>http://localhost:1313/2019/10/asyncio/</link>
      <pubDate>Wed, 16 Oct 2019 11:04:52 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/10/asyncio/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Functools</title>
      <link>http://localhost:1313/2019/10/functools/</link>
      <pubDate>Sun, 13 Oct 2019 21:23:13 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/10/functools/</guid>
      <description>Functools 函数库用于高阶函数，作用于或返回其他函数的函数。 cmp_to_key functools.cmp_to_key(func) 将原先的cmp函数转换成key功能的工具，用于sorted()， min()， max()</description>
    </item>
    
    <item>
      <title>Collections</title>
      <link>http://localhost:1313/2019/10/collections/</link>
      <pubDate>Thu, 10 Oct 2019 18:13:25 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/10/collections/</guid>
      <description>Collections 主要提供特别功能的容器来代替内置模块中dict/list/set/tuple collections模块主要函数 namedtuple deque ChainMap Counter OrderedDIct defaultdict UserDict UserDict UserString namedtuple 创建一个</description>
    </item>
    
    <item>
      <title>迭代器与生成器</title>
      <link>http://localhost:1313/2019/10/%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E7%94%9F%E6%88%90%E5%99%A8/</link>
      <pubDate>Tue, 08 Oct 2019 19:34:35 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/10/%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E7%94%9F%E6%88%90%E5%99%A8/</guid>
      <description>iterator and generator iterator 概述 迭代器：迭代器是访问元素的一种方式，迭代器对象从集合的第一个元素开始访问，直到所有的元素被访问完结束。一般的序列（字符串/列表/</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>http://localhost:1313/2019/10/git/</link>
      <pubDate>Mon, 07 Oct 2019 14:21:50 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/10/git/</guid>
      <description>Git 基本操作 查看工作状态和历史提交 进行仓库的初始化以及创建 git init 将文件添加到暂存区 git add 上传提交的名字 git commit -m &amp;quot;....&amp;quot; 查看状态 git status 将修改的文件从 暂存区中恢</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/about/</guid>
      <description>Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.
Hugo makes use of a variety of open source projects including:
 https://github.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/1/01/sort/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/1/01/sort/</guid>
      <description>golang中sort.Sort方法的使用</description>
    </item>
    
  </channel>
</rss>
