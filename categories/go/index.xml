<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on nattygui的学习记录</title>
    <link>https://nattygui.github.io/categories/go/</link>
    <description>Recent content in go on nattygui的学习记录</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 22 Oct 2020 07:49:38 +0800</lastBuildDate>
    
        <atom:link href="https://nattygui.github.io/categories/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GMP模型</title>
      <link>https://nattygui.github.io/2020/10/gmp/</link>
      <pubDate>Thu, 22 Oct 2020 07:49:38 +0800</pubDate>
      
      <guid>https://nattygui.github.io/2020/10/gmp/</guid>
      <description>GMP模型 含义 Goroutine 的并发编程模型基于GMP模型，其中基本含义如下： G: 表示goroutine，每个goroutine都有自己的栈空间，定时器，初</description>
    </item>
    
    <item>
      <title>reflect</title>
      <link>https://nattygui.github.io/2020/10/reflect/</link>
      <pubDate>Thu, 22 Oct 2020 07:49:38 +0800</pubDate>
      
      <guid>https://nattygui.github.io/2020/10/reflect/</guid>
      <description>为什么使用反射 有时候我们需要编写一个函数能够处理一类并不满足普通公共接口类型的值，也有可能是因为它们并没有确定的表示方式，或者是在我们设计该</description>
    </item>
    
    <item>
      <title>reflect.Type 和 reflect.Value</title>
      <link>https://nattygui.github.io/2020/10/typeandvalue/</link>
      <pubDate>Thu, 22 Oct 2020 07:49:38 +0800</pubDate>
      
      <guid>https://nattygui.github.io/2020/10/typeandvalue/</guid>
      <description>reflect.Type 和 reflect.Value 反射是由reflect包提供支持，它定义了俩个重要的类型，Type和Value。 一个Type表示一个Go类型，它是一个接口。refle</description>
    </item>
    
    <item>
      <title>Goroutines和Channels</title>
      <link>https://nattygui.github.io/2020/09/goroutines_and_channels/</link>
      <pubDate>Mon, 28 Sep 2020 07:49:38 +0800</pubDate>
      
      <guid>https://nattygui.github.io/2020/09/goroutines_and_channels/</guid>
      <description>Goroutines和Channels 并发程序指同时进行多个任务的程序，随着硬件的发展，并发程序变得越来越重要。web服务器会一次处理成千上</description>
    </item>
    
    <item>
      <title>centos7 中常用的查询命令</title>
      <link>https://nattygui.github.io/2020/09/querycommand/</link>
      <pubDate>Fri, 04 Sep 2020 09:27:54 +0800</pubDate>
      
      <guid>https://nattygui.github.io/2020/09/querycommand/</guid>
      <description>centos7 中常用的查询命令 ps 显示当前进程信息 ps -A 显示所有的进程信息 PID TTY TIME CMD 1 ? 00:00:08 systemd 2 ? 00:00:00 kthreadd 4 ? 00:00:00 kworker/0:0H 6 ? 00:00:00 ksoftirqd/0 7 ? 00:00:00 migration/0 8 ? 00:00:00 rcu_bh 9 ? 00:00:25 rcu_sched 10 ? 00:00:00 lru-add-drain 11 ? 00:00:00 watchdog/0 12</description>
    </item>
    
    <item>
      <title>Centos7 安装redis</title>
      <link>https://nattygui.github.io/2020/09/installredis/</link>
      <pubDate>Fri, 04 Sep 2020 09:27:54 +0800</pubDate>
      
      <guid>https://nattygui.github.io/2020/09/installredis/</guid>
      <description>Centos7 安装redis 1、 检查是否有redis yum 源 若没有执行下一步，若有执行第三步 yum search redis yum info redis 2、安装 epel 仓库 yum install -y epel-release 3、 安装redis 数据库 yum info redis</description>
    </item>
    
    <item>
      <title>Privoxy</title>
      <link>https://nattygui.github.io/2020/09/privoxy/</link>
      <pubDate>Fri, 04 Sep 2020 09:27:54 +0800</pubDate>
      
      <guid>https://nattygui.github.io/2020/09/privoxy/</guid>
      <description>Centos7 下traojan配置privoxy 下载trojan 首先去github下载 linux版本 https://github.com/trojan-gfw/trojan/releases/tag/v1.16.0 wget https://github.com/trojan-gfw/trojan/releases/download/v1.16.0/trojan-1.16.0-linux-amd64.tar.xz tar xvf trojan-1.16.0-linux-amd64.tar.xz 将配置写在config.json下 cd trojan //</description>
    </item>
    
    <item>
      <title>golang实现不分配额外内存[]byte和string转换</title>
      <link>https://nattygui.github.io/2020/06/strbytesconv/</link>
      <pubDate>Mon, 22 Jun 2020 07:49:38 +0800</pubDate>
      
      <guid>https://nattygui.github.io/2020/06/strbytesconv/</guid>
      <description>golang实现不分配额外内存[]byte和string转换 普通的强转 一般在进行[]byte 和string之间进行转换时，通过进行强转实现。</description>
    </item>
    
    <item>
      <title>map 介绍</title>
      <link>https://nattygui.github.io/2020/06/map/</link>
      <pubDate>Mon, 22 Jun 2020 07:49:38 +0800</pubDate>
      
      <guid>https://nattygui.github.io/2020/06/map/</guid>
      <description>golang 数据结构之map 介绍 map是hash table数据结构，它支持快速的查找、增加和删除。 定义和声明 map[keyType]ValueType 其中 keyType 必须是可比较的数据类型 (golan</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://nattygui.github.io/2019/10/git/</link>
      <pubDate>Mon, 07 Oct 2019 14:21:50 +0800</pubDate>
      
      <guid>https://nattygui.github.io/2019/10/git/</guid>
      <description>Git 基本操作 查看工作状态和历史提交 进行仓库的初始化以及创建 git init 将文件添加到暂存区 git add 上传提交的名字 git commit -m &amp;quot;....&amp;quot; 查看状态 git status 将修改的文件从 暂存区中恢</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://nattygui.github.io/about/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nattygui.github.io/about/</guid>
      <description>Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.
Hugo makes use of a variety of open source projects including:
 https://github.</description>
    </item>
    
  </channel>
</rss>
